tosca_definitions_version: cloudify_dsl_1_3

description: >
  Mini poc deployment : 2 tenants networks 1 fortios in the middle with 1 rule for
  allowing traffic 2 ubuntu with apache to generate traffic. Everyone has floating ip.
  You MUST upload a license file with cfy secrets like:
  $ cfy secret create fgt_license -f ../../fortigate/FGT.lic

imports:
  - http://www.getcloudify.org/spec/cloudify/4.0/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/2.9.0/plugin.yaml
  - plugin.yaml
inputs:
  fos_image:
    default: {}
  fos_flavor:
    default: {}
  key_name:
    default: {}


  mgmt_network_name:
    default: "mgmt"
  external_network_name:
    default: "ext_net"



dsl_definitions:

# The configuration of openstack access is in the file /etc/cloudify/openstack_config.json
# For simplicity of blueprint reading.

#  ##openstack_config: &openstack_config
#    username: { get_secret: keystone_username }
#    password: { get_secret: keystone_password }
#    tenant_name: { get_secret: keystone_tenant_name }
#    auth_url: { get_secret: keystone_url }
#    region: { get_secret: region }

node_templates:

  fos_floating_ip:
    type: cloudify.openstack.nodes.FloatingIP
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              floating_network_name: { get_input: external_network_name }

  left_network:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id: left_network_openstack

  left_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      ##openstack_config: *openstack_config
      resource_id: left_subnet_openstack
      subnet:
        host_routes: [ {"nexthop": "10.40.40.254", "destination": "10.20.20.0/24"} ]
        allocation_pools:
          - start: 10.40.40.3
            end: 10.40.40.140
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              cidr: 10.40.40.0/24
              ip_version: 4
              gateway_ip: null
      cloudify.interfaces.validation:
        creation:
          inputs:
            args:
              cidr: 10.40.40.0/24
              ip_version: 4
              gateway_ip: null
    relationships:
      - target: left_network
        type: cloudify.relationships.contained_in

  right_network:
    type: cloudify.openstack.nodes.Network
    properties:
      ##openstack_config: *openstack_config
      resource_id: right_network_openstack

  right_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id: right_subnet_openstack
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              cidr: 10.20.20.0/24
              ip_version: 4
              gateway_ip: null
      cloudify.interfaces.validation:
        creation:
          inputs:
            args:
              cidr: 10.20.20.0/24
              ip_version: 4
              gateway_ip: null
    relationships:
      - target: right_network
        type: cloudify.relationships.contained_in

  left_port:
    type: cloudify.openstack.nodes.Port
    properties:
      resource_id: left_port
      fixed_ip: "10.40.40.254"
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              port_security_enabled: False
    relationships:
      - target: left_network
        type: cloudify.relationships.contained_in
      - target: left_subnet
        type: cloudify.relationships.depends_on

  cfy_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      resource_id: cfy_security_group_openstack
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: 8080
        - remote_ip_prefix: 0.0.0.0/0
          port: 22
        - remote_ip_prefix: 0.0.0.0/0
          port: 80
        - remote_ip_prefix: 0.0.0.0/0
          port: 443
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp
          port_range_max: null
          port_range_min: null



  fortigate:
    type: cloudify.openstack.nodes.Fortigate
    properties:
      server:
        image_name: { get_input: fos_image }
        flavor_name: { get_input: fos_flavor }
        #useless key_name for fortinet but mandatory for openstack
        key_name: { get_input: key_name }
        password: "fortinet"
        user: "admin"
        vdom: "root"
        verify_ssl: False
      agent_config:
        install_method: none # do not install agent
      ##openstack_config: *openstack_config
      management_network_name: { get_input: mgmt_network_name }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              userdata: |
                #FOS VM Config File
                config system interface
                edit port1
                 set mode dhcp
                 set allowaccess ping https ssh http snmp fgfm
                 set defaultgw enable
                next
                edit port2
                set mode dhcp
                set allowaccess ping
                 set defaultgw disable
                next
                edit port3
                set mode dhcp
                set allowaccess ping
                 set defaultgw disable
                next
                end
                config firewall policy
                edit 1
                set name "Allow any any"
                set srcintf "any"
                set dstintf "any"
                set srcaddr "all"
                set dstaddr "all"
                set action accept
                set schedule "always"
                set service "ALL"
                set nat enable
                next
                end
              files:
               license: { get_secret: fgt_license }
    relationships:
      - target: fos_floating_ip
        type: cloudify.openstack.server_connected_to_floating_ip
      - target: left_port
        type: cloudify.relationships.connected_to
      - target: right_network
        type: cloudify.relationships.connected_to
#      - target: right_subnet
#        type: cloudify.relationships.depends_on
#      - target: my_security_group
#        type: cloudify.openstack.server_connected_to_security_group
#not compatible with portsecurity disabled
